// Mocks generated by Mockito 5.4.4 from annotations
// in skill_trade/test/customer_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:skill_trade/domain/models/customer.dart' as _i2;
import 'package:skill_trade/domain/repositories/customer_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCustomer_0 extends _i1.SmartFake implements _i2.Customer {
  _FakeCustomer_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CustomerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerRepository extends _i1.Mock
    implements _i3.CustomerRepository {
  MockCustomerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Customer> fetchCustomer(String? customerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCustomer,
          [customerId],
        ),
        returnValue: _i4.Future<_i2.Customer>.value(_FakeCustomer_0(
          this,
          Invocation.method(
            #fetchCustomer,
            [customerId],
          ),
        )),
      ) as _i4.Future<_i2.Customer>);

  @override
  _i4.Future<List<_i2.Customer>> fetchAllCustomers() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllCustomers,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Customer>>.value(<_i2.Customer>[]),
      ) as _i4.Future<List<_i2.Customer>>);

  @override
  _i4.Future<void> updatePassword(Map<String, dynamic>? updates) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [updates],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
