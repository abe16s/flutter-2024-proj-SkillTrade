// Mocks generated by Mockito 5.4.4 from annotations
// in skill_trade/test/review_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:skill_trade/domain/models/review.dart' as _i5;
import 'package:skill_trade/infrastructure/data_sources/review_remote_data_source.dart'
    as _i2;
import 'package:skill_trade/infrastructure/repositories/review_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReviewRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.ReviewRemoteDataSource {
  _FakeReviewRemoteDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReviewRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewRepository extends _i1.Mock implements _i3.ReviewRepository {
  MockReviewRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ReviewRemoteDataSource get remoteDataSource => (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeReviewRemoteDataSource_0(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i2.ReviewRemoteDataSource);

  @override
  _i4.Future<List<_i5.Review>> getTechnicianReviews(int? technicianId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTechnicianReviews,
          [technicianId],
        ),
        returnValue: _i4.Future<List<_i5.Review>>.value(<_i5.Review>[]),
      ) as _i4.Future<List<_i5.Review>>);

  @override
  _i4.Future<void> postReview(
    int? technicianId,
    int? customerId,
    int? rate,
    String? review,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postReview,
          [
            technicianId,
            customerId,
            rate,
            review,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateReview(
    int? reviewId,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReview,
          [
            reviewId,
            updates,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteReview(int? reviewId) => (super.noSuchMethod(
        Invocation.method(
          #deleteReview,
          [reviewId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
