// Mocks generated by Mockito 5.4.4 from annotations
// in skill_trade/test/individual_technician_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:skill_trade/domain/models/technician.dart' as _i3;
import 'package:skill_trade/infrastructure/data_sources/individual_technician_remote_data_source.dart'
    as _i2;
import 'package:skill_trade/infrastructure/repositories/individual_technician_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIndividualTechnicianRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.IndividualTechnicianRemoteDataSource {
  _FakeIndividualTechnicianRemoteDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTechnician_1 extends _i1.SmartFake implements _i3.Technician {
  _FakeTechnician_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IndividualTechnicianRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIndividualTechnicianRepository extends _i1.Mock
    implements _i4.IndividualTechnicianRepository {
  MockIndividualTechnicianRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IndividualTechnicianRemoteDataSource get remoteDataSource =>
      (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeIndividualTechnicianRemoteDataSource_0(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i2.IndividualTechnicianRemoteDataSource);

  @override
  _i5.Future<_i3.Technician> getIndividualTechnician(String? technicianId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIndividualTechnician,
          [technicianId],
        ),
        returnValue: _i5.Future<_i3.Technician>.value(_FakeTechnician_1(
          this,
          Invocation.method(
            #getIndividualTechnician,
            [technicianId],
          ),
        )),
      ) as _i5.Future<_i3.Technician>);

  @override
  _i5.Future<void> updateTechnicianProfile(
    String? technicianId,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTechnicianProfile,
          [
            technicianId,
            updates,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updatePassword(Map<String, dynamic>? updates) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [updates],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
